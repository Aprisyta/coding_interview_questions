// https://leetcode.com/problems/merge-k-sorted-lists/


/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
import java.util.PriorityQueue;

class Solution {
    public ListNode mergeKLists(ListNode[] lists) {
        PriorityQueue<Integer> pq = new PriorityQueue<>();
        for (ListNode l : lists) {
            while(l != null) {
                pq.add(l.val);
                l = l.next;
            }
        }
        
        if (pq.isEmpty()) return null;
        ListNode l = new ListNode(pq.poll());
        ListNode head = l;
        while (!pq.isEmpty()) {
            ListNode temp = new ListNode(pq.poll());
            l.next = temp;
            l = l.next;
        }
        return head;
    }
}
